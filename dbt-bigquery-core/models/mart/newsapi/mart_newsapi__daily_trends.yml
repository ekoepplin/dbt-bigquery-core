version: 2

models:
  - name: mart_newsapi__daily_trends
    description: "Daily trends of article volume by language"
    config:
      access: public
      contract:
        enforced: true
      materialized: table
      tags: ['mart', 'newsapi', 'reporting', 'time-series']
    columns:
      - name: article_date
        description: "The date of the articles (YYYY-MM-DD)"
        type: date
        tests:
          - not_null
      - name: language_code
        description: "Two-letter ISO language code of the articles (e.g., 'en', 'es', 'fr')"
        type: string
        tests:
          - not_null

      - name: article_count
        description: "Total number of articles published on this date in this language"
        type: integer
        tests:
          - not_null
          - positive_value

      - name: source_count
        description: "Number of unique news sources publishing articles on this date and language"
        type: integer
        tests:
          - not_null
          - positive_value

      - name: rolling_7day_avg_articles
        description: "7-day rolling average of article count for each language"
        type: float64
        tests:
          - not_null

      - name: rolling_7day_avg_sources
        description: "7-day rolling average of source count for each language"
        type: float64
        tests:
          - not_null

      - name: prev_day_article_count
        description: "Previous day's article count for the same language"
        type: integer

      - name: day_over_day_change
        description: "Percentage change in article count compared to previous day ((current - previous) / previous)"
        type: float64

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - article_date
            - language_code
      # Testing total article count
      - dbt_expectations.expect_table_aggregation_to_equal_other_table:
          expression: SUM(article_count)
          compare_model: ref('int_newsapi__articles')
          compare_expression: COUNT(*)
          compare_row_condition: published_at IS NOT NULL
          tolerance_percent: 0.0001
     